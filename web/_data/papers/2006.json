{ "title" : "2006",
  "papers": [  
  {
    "bibitem": "@article{CL06, author = {Cruz-Filipe, Lu{\\'i}s and Letouzey, Pierre}, booktitle = {Proceedings of the 12th Symposium on the Integration of Symbolic Computation and Mechanized Reasoning (Calculemus 2005)}, editor = {Carette, Jacques and Farmer, William M.}, month = {mar}, doi = {10.1016/j.entcs.2005.11.024}, number = {1}, pages = {75--91}, publisher = {Elsevier}, journal = {Electronic Notes in Computer Science}, title = {A Large-Scale Experiment in Executing Extracted Programs}, volume = {151}, year = {2006}}",
    "links": [
      { "link" : "https://imada.sdu.dk/~lcf/pubs/paper05.pdf" }
    ],
    "tags": [ "Theorem Proving" ],
    "authors": [ "Lu√≠s Cruz-Filipe" ],
    "abstract": "It is a well-known fact that algorithms are often hidden inside mathematical proofs. If these proofs are formalized inside a proof assistant, then a mechanism called extraction can generate the corresponding programs automatically. Previous work has focused on the difficulties in obtaining a program from a formalization of the Fundamental Theorem of Algebra inside the Coq proof assistant. In theory, this program allows one to compute approximations of roots of polynomials. However, as we show in this work, there is currently a big gap between theory and practice. We study the complexity of the extracted program and analyze the reasons of its inefficiency, showing that this is a direct consequence of the approach used throughout the formalization.",
    "non_group" : true,
    "type": "journal"
  }
]
}
