{ "title" : "2020",
  "papers": [
	{
	    "bibitem": "@inproceedings{DBLP:conf/birthday/GiallorenzoLMSZ20,  author = {Saverio Giallorenzo and Ivan Lanese and Fabrizio Montesi and Davide Sangiorgi and Stefano Pio Zingaro},  editor = {Frank S. de Boer and  Jacopo Mauro}, title = {The Servers of Serverless Computing: {A} Formal Revisitation of Functions  as a Service},  booktitle = {Recent Developments in the Design and Implementation of Programming  Languages, Gabbrielli's Festschrift, November 27, 2020, Bologna, Italy},  series = {OASIcs},  volume = {86},  pages = {5:1--5:21},  publisher = {Schloss Dagstuhl - Leibniz-Zentrum für Informatik},  year = {2020},  url = {https://doi.org/10.4230/OASIcs.Gabbrielli.5},  doi = {10.4230/OASIcs.Gabbrielli.5},  biburl = {https://dblp.org/rec/conf/birthday/GiallorenzoLMSZ20.bib} }",
	    "tags": [ "Serverless", "Process Calculi", "Functional Programming" ],
	    "authors": [ "Saverio Giallorenzo", "Fabrizio Montesi" ],
	    "abstract": "",
		"non_group" : false,
	    "type": "conference"
	  },
	{
	    "bibitem": "@proceedings{DBLP:conf/microservices/2019,  author = {Lu{\\'{\\i}}s Cruz{-}Filipe and Saverio Giallorenzo and Fabrizio Montesi and Marco Peressotti and Florian Rademacher and Sabine Sachweh},  title = {Joint Post-proceedings of the First and Second International Conference on Microservices, Microservices 2017/2019, October 23-27, 2017, Odense, Denmark / February 19-21, 2019, Dortmund, Germany},  series = {OASIcs},  volume = {78},  year = {2020},  url = {https://www.dagstuhl.de/dagpub/978-3-95977-137-5} }",
	    "tags": [ "Microservices" ],
	    "authors": [ "Luís Cruz-Filipe", "Saverio Giallorenzo", "Fabrizio Montesi", "Marco Peressotti" ],
	    "abstract": "",
		"non_group" : false,
	    "type": "editorial"
	  },
    {
	  "bibitem": "@article{CM20, author = {Lu{\\'{\\i}}s Cruz{-}Filipe and  Fabrizio Montesi},  title = {A core model for choreographic programming},  journal = {Theoretical Computer Science},  volume = {802},  pages = {38--66},  year = {2020},  url = {https://doi.org/10.1016/j.tcs.2019.07.005},  doi = {10.1016/j.tcs.2019.07.005}}",
	  "links": [
		{ "link" : "https://www.fabriziomontesi.com/files/cm20.pdf" }
	  ],
      "tags": [ "Choreographic Programming", "Process Calculi" ],
      "authors": [ "Luís Cruz-Filipe", "Fabrizio Montesi" ],
	  "abstract": "Choreographic Programming is a paradigm for developing concurrent programs that are deadlock-free by construction, as a result of programming communications declaratively and then synthesising process implementations automatically. Despite strong interest on choreographies, a foundational model that explains which computations can be performed with the hallmark constructs of choreographies is still missing. In this work, we introduce Core Choreographies (CC), a model that includes only the core primitives of choreographic programming. Every computable function can be implemented as a choreography in CC, from which we can synthesise a process implementation where independent computations run in parallel. We discuss the design of CC and argue that it constitutes a canonical model for choreographic programming.",
      "type": "journal",
      "non_group": false
    },
    {
      "bibitem": "@phdthesis{S20, author = {Larisa Safina}, title = {Formal methods and patterns for microservices}, school = {University of Southern Denmark}, year = 2020, month = 1}",
      "tags": [ "Microservices", "Choreographic Programming" ],
      "authors": [ "Larisa Safina" ],
      "abstract": "",
      "non_group" : false,
      "type": "thesis"
    },
    {
      "bibitem": "@incollection{BGMTZ20, author = {Mario Bravetti and  Saverio Giallorenzo and  Jacopo Mauro and  Iacopo Talevi and  Gianluigi Zavattaro},  editor = {Antonio Bucchiarone and  Nicola Dragoni and  Schahram Dustdar and  Patricia Lago and  Manuel Mazzara and  Victor Rivera and  Andrey Sadovykh},  title = {A Formal Approach to Microservice Architecture Deployment},  booktitle = {Microservices, Science and Engineering},  pages = {183--208},  publisher = {Springer},  year = {2020},  url = {https://doi.org/10.1007/978-3-030-31646-4\\_8},  doi = {10.1007/978-3-030-31646-4\\_8} }",
      "tags": [ "Microservices", "Deployment" ],
      "authors": [ "Saverio Giallorenzo", "Jacopo Mauro" ],
      "abstract": "Following previous work on the automated deployment of component-based applications, we present a formal model specifically tailored for reasoning on the deployment of microservice architectures. The first result that we present is a formal proof of decidability of the problem of synthesizing optimal deployment plans for microservice architectures, a problem which was proved to be undecidable for generic component-based applications. Then, given that such proof translates the deployment problem into a constraint satisfaction problem, we present the implementation of a tool that, by exploiting state-of-the-art constraint solvers, can be used to actually synthesize optimal deployment plans. We evaluate the applicability of our tool on a realistic microservice architecture taken from the literature.",
      "non_group" : false,
      "type": "chapter"
    },
    {
      "bibitem": "@inproceedings{AHMNP19, title={{A Graph-Based Tool to Embed the π-Calculus into a Computational DPO Framework}}, author={Jakob Lykke Andersen and Marc Hellmuth and Daniel Merkle and Nikolai N{\\o}jgaard and Marco Peressotti}, booktitle = {Proceedings of the {SOFSEM} 2020 Doctoral Student Research Forum co-located with the 46th International Conference on Current Trends in Theory and Practice of Computer Science {(SOFSEM} 2020), Limassol, Cyprus, January 20-24, 2020}, editor = {Yannis Manolopoulos and George A. Papadopoulos and Theodoros Tzouramanis}, series = {{CEUR} Workshop Proceedings}, volume = {2568}, pages = {121--132}, publisher = {CEUR-WS.org}, year={2020}, url = {http://ceur-ws.org/Vol-2568/paper11.pdf}}",
      "links": [
        { "name" : "technical report",
          "link" : "https://arxiv.org/abs/1911.00407",
          "icon" : "arxiv" },
        { "name" : "tool",
          "link" : "http://cheminf.imada.sdu.dk/epim",
          "icon" : "website" }
      ],
      "tags": [ "Process Calculi", "Rewriting Systems" ],
      "authors": [ "Marco Peressotti" ],
      "abstract": "Graph transformation approaches have been successfully used to analyse and design chemical and biological systems. Here we build on top of a DPO framework, in which molecules are modelled as typed attributed graphs and chemical reactions are modelled as graph transformations. Edges and vertexes can be labelled with first-order terms, which can be used to encode, e.g., steric information of molecules. While targeted to chemical settings, the computational framework is intended to be very generic and applicable to the exploration of arbitrary spaces derived via iterative application of rewrite rules, such as process calculi like Milner's π-calculus. To illustrate the generality of the framework, we introduce EpiM: a tool for computing execution spaces of π-calculus processes. EpiM encodes π-calculus processes as typed attributed graphs and then exploits the existing DPO framework to compute their dynamics in the form of graphs where nodes are π-calculus processes and edges are reduction steps. EpiM takes advantage of the graph-based representation and facilities offered by the framework, like efficient isomorphism checking to prune the space without resorting to explicit structural equivalences. EpiM is available as an online Python-based tool. ",
      "non_group" : false,
      "type": "workshop",
      "grants" : [ "DFF-7014-00041" ]
    },
    {
      "bibitem": "@inproceedings{BMP20, title={{Towards a Formal Model for Composable Container Systems}}, author={Fabio Burco and Marino Miculan and Marco Peressotti}, booktitle = {Proceedings of the 35rd Annual {ACM} Symposium on Applied Computing, {SAC} 2020, Brno, Czech Republic, March 29-April 03, 2020}, pages = {173--175}, publisher = {{ACM}}, year={2020}, url = {https://doi.org/10.1145/3341105.3374121}, doi = {10.1145/3341105.3374121}}",
      "links": [
        { "name" : "technical report",
          "link" : "https://arxiv.org/abs/1912.01107",
          "icon" : "arxiv" },
        { "name" : "tool",
          "link" : "https://github.com/bigraphs/jlibbig",
          "icon" : "website" }
      ],
      "tags": [ "Process Calculi", "Rewriting Systems" ],
      "authors": [ "Marco Peressotti" ],
      "abstract": "In modern cloud-based architectures, containers play a central role: they provide powerful isolation mechanisms such that developers can focus on the logic and dependencies of applications while system administrators can focus on deployment and management issue.  In this work, we propose a formal model for container-based systems, using the framework of Bigraphical Reactive Systems (BRSs).  We first introduce <i>local directed bigraphs</i>, a graph-based formalism which allows us to deal with localized resources.  Then, we define a signature for modelling containers and provide some examples of bigraphs modelling containers.  These graphs can be analysed and manipulated using techniques from graph theory: properties about containers can be formalized as properties of the corresponding bigraphic representations.  Moreover, it turns out that the composition of containers as performed by e.g. docker-compose, corresponds precisely to the composition of the corresponding bigraphs inside an ``environment bigraph'' which in turn is obtained directly from the YAML file used to define the composition of containers.",
      "non_group" : false,
      "type": "conference",
      "grants" : [ "DFF-7014-00041" ]
    },
    {
      "bibitem": "@inproceedings{CMP20, title={{Computing Embeddings of Directed Bigraphs}}, author={Alessio Chiapperini and Marino Miculan and Marco Peressotti}, booktitle = {Graph Transformation - 13th International Conference, {ICGT} 2020, Held as Part of {STAF} 2020, Bergen, Norway, June 25-26, 2020, Proceedings}, series = {Lecture Notes in Computer Science}, volume = {12150}, pages = {38--56}, publisher = {Springer}, year = {2020}, url =  https://doi.org/10.1007/978-3-030-51372-6_3}, doi = {10.1007/978-3-030-51372-6_3}",
      "links": [
        { "name" : "technical report",
          "link" : "https://arxiv.org/abs/2003.10209",
          "icon" : "arxiv" },
        { "name" : "tool",
          "link" : "https://github.com/bigraphs/jlibbig",
          "icon" : "website" }
      ],
      "tags": [ "Rewriting Systems" ],
      "authors": [ "Marco Peressotti" ],
      "abstract": "Directed bigraphs are a meta-model which generalises Milner’s bigraphs by taking into account the request flow between controls and names. A key problem about these bigraphs is that of bigraph embedding, i.e., finding the embeddings of a bigraph inside a larger one. We present an algorithm for computing embeddings of directed bigraphs, via a reduction to a constraint satisfaction problem. We prove soundness and completeness of this algorithm, and provide an implementation in jLibBig, a general Java library for manipulating bigraphical reactive systems, together with some experimental results. ",
      "non_group" : false,
      "type": "conference",
      "grants" : [ "DFF-7014-00041" ]
    },
    {
      "bibitem": "@inproceedings{MP20,  author = {Miculan, Marino and Peressotti, Marco}, editor = {Cordasco, Gennaro and Gargano, Luisa and Rescigno, Adele A.}, title = {Software Transactional Memory with Interactions}, booktitle = {Proceedings of the 21st Italian Conference on Theoretical Computer Science, Ischia, Italy, September 14-16, 2020}, series = {{CEUR} Workshop Proceedings}, volume = {2756}, pages = {67--80}, publisher = {CEUR-WS.org}, year = {2020}, url = {http://ceur-ws.org/Vol-2756/paper_7.pdf}}",
      "links": [
        { "name" : "technical report",
          "link" : "https://arxiv.org/abs/2007.10809",
          "icon" : "arxiv"}
      ],
      "abstract": "Software Transactional memory (STM) is an emerging abstraction for concurrent programming alternative to lock-based synchronizations. Most STM models admit only isolated transactions, which are not adequate in multithreaded programming where transactions need to interact via shared data before committing. To overcome this limitation, in this paper we present Open Transactional Memory (OTM), a programming abstraction supporting safe, data-driven interactions between composable memory transactions. This is achieved by relaxing isolation between transactions, still ensuring atomicity. This model allows for loosely-coupled interactions since transaction merging is driven only by accesses to shared data, with no need to specify participants beforehand.",
      "tags" : [ "Concurrency", "Programming Languages", "Transactional Memory" ],
      "authors" : [ "Marco Peressotti" ],
      "type" : "Conference",
      "grants" : [ "DFF-7014-00041" ],
      "non_group" : false
    },
    {
      "bibitem": "@inproceedings{CNG20,author={Luís Cruz{-}Filipe and Isabel Nunes and Graça Gaspar},title={Hypothetical Answers to Continuous Queries over Data Streams},booktitle = {The Thirty-Fourth {AAAI} Conference on Artificial Intelligence, {AAAI} 2020},pages={2798--2805},publisher={{AAAI} Press},year={2020}}",
      "links": [
        { "link" : "https://aaai.org/ojs/index.php/AAAI/article/view/5668" }
      ],
      "abstract": "Continuous queries over data streams often delay answers until some relevant input arrives through the data stream. These delays may turn answers, when they arrive, obsolete to users who sometimes have to make decisions with no help whatsoever. Therefore, it can be useful to provide hypothetical answers &endash; &ldquo;given the current information, it is possible that X will become true at time t&rdquo; &endash; instead of no information at all.<br />In this paper we present a semantics for queries and corresponding answers that covers such hypothetical answers, together with an online algorithm for updating the set of facts that are consistent with the currently available information.",
      "tags" : [ "Knowledge Representation", "Logic" ],
      "authors" : [ "Luís Cruz-Filipe" ],
      "type" : "Conference",
      "non_group" : false
    }
]
}
