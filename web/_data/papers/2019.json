{ "title" : "2019",
  "papers": [
    {
      "bibitem": "@inproceedings{GMSZ19, author = {Saverio Giallorenzo and  Fabrizio Montesi and  Larisa Safina and  Stefano Pio Zingaro},  title = {Ephemeral Data Handling in Microservices},  booktitle = {2019 {IEEE} International Conference on Services Computing, {SCC}  2019, Milan, Italy, July 8-13, 2019},  pages = {234--236},  year = {2019},  url = {https://doi.org/10.1109/SCC.2019.00048},  doi = {10.1109/SCC.2019.00048},  timestamp = {Wed, 04 Sep 2019 15:59:14 +0200},  publisher = {{IEEE}} }",
      "links": [
        { "link" : "https://saveriogiallorenzo.com/publications/scc2019/scc2019.pdf" },
        { "name" : "technical report",
          "link" : "https://arxiv.org/abs/1904.11327",
          "icon" : "arxiv" }
      ],
      "tags": [ "Microservices", "Programming Languages" ],
      "authors": [ "Saverio Giallorenzo", "Fabrizio Montesi", "Larisa Safina" ],
      "abstract": "Ephemeral data handling, whereby processed data do not persist, is an emerging requirement of connected IT systems, due to storage constraints (IoT) or regulatory demands (eHealth, GDPR). We present ongoing work on TQuery, a query language for ephemeral data handling in microservices.",
      "non_group" : false,
      "type": "conference",
      "grants" : [ "DFF-7014-00041" ]
    },
    {
      "bibitem": "@inproceedings{GGLM19,  author = {Maurizio Gabbrielli and  Saverio Giallorenzo and  Ivan Lanese and  Jacopo Mauro},  title = {Guess Who's Coming: Runtime Inclusion of Participants in Choreographies},  booktitle = {The Art of Modelling Computational Systems: {A} Journey from Logic  and Concurrency to Security and Privacy - Essays Dedicated to Catuscia  Palamidessi on the Occasion of Her 60th Birthday},  pages = {118--138},  year = {2019},  url = {https://doi.org/10.1007/978-3-030-31175-9\\_8},  doi = {10.1007/978-3-030-31175-9\\_8},  publisher = {Springer} }",
      "links": [
        { "link" : "https://saveriogiallorenzo.com/publications/guess-who/guess-who.pdf" }
      ],
      "tags": [ "Choreographic Programming", "Process Calculi", "Concurrency", "Adaptation" ],
      "authors": [ "Saverio Giallorenzo", "Jacopo Mauro" ],
      "abstract": "In Choreographic Programming, a choreography specifies in a single artefact the expected behaviour of all the participants in a distributed system. The choreography is used to synthesise correct-by- construction programs for each participant. In previous work, we defined Dynamic Choreographies to support the update of distributed systems at runtime. In this work, we extend Dynamic Choreographies to include new participants at runtime, capturing those use cases where the system might be updated to interact with new, unforeseen stakeholders. We formalise our extension, prove its correctness, and present an implementation in the AIOCJ choreographic framework.",
      "non_group" : false,
      "type": "conference"
    },
    {
      "bibitem": "@inproceedings{GGLM19,  author = {Maurizio Gabbrielli and  Saverio Giallorenzo and  Ivan Lanese and  Jacopo Mauro},  title = {Guess Who's Coming: Runtime Inclusion of Participants in Choreographies},  booktitle = {The Art of Modelling Computational Systems: {A} Journey from Logic  and Concurrency to Security and Privacy - Essays Dedicated to Catuscia  Palamidessi on the Occasion of Her 60th Birthday},  pages = {118--138},  year = {2019},  url = {https://doi.org/10.1007/978-3-030-31175-9\\_8},  doi = {10.1007/978-3-030-31175-9\\_8},  publisher = {Springer} }",
      "links": [
        { "link" : "https://saveriogiallorenzo.com/publications/guess-who/guess-who.pdf" }
      ],
      "tags": [ "Choreographic Programming", "Process Calculi", "Concurrency", "Adaptation" ],
      "authors": [ "Saverio Giallorenzo", "Jacopo Mauro" ],
      "abstract": "In Choreographic Programming, a choreography specifies in a single artefact the expected behaviour of all the participants in a distributed system. The choreography is used to synthesise correct-by- construction programs for each participant. In previous work, we defined Dynamic Choreographies to support the update of distributed systems at runtime. In this work, we extend Dynamic Choreographies to include new participants at runtime, capturing those use cases where the system might be updated to interact with new, unforeseen stakeholders. We formalise our extension, prove its correctness, and present an implementation in the AIOCJ choreographic framework.",
      "non_group" : false,
      "type": "conference"
    },
    {
      "bibitem": "@inproceedings{GGLMPZ19, author = {Maurizio Gabbrielli and  Saverio Giallorenzo and  Ivan Lanese and  Fabrizio Montesi and  Marco Peressotti and  Stefano Pio Zingaro},  editor = {Hanne Riis Nielson and  Emilio Tuosto},  title = {No More, No Less - {A} Formal Model for Serverless Computing},  booktitle = {Coordination Models and Languages - 21st {IFIP} {WG} 6.1 International  Conference, {COORDINATION} 2019, Held as Part of the 14th International  Federated Conference on Distributed Computing Techniques, DisCoTec  2019, Kongens Lyngby, Denmark, June 17-21, 2019, Proceedings},  series = {Lecture Notes in Computer Science},  volume = {11533},  pages = {148--157},  publisher = {Springer},  year = {2019},  url = {https://doi.org/10.1007/978-3-030-22397-7\\_9},  doi = {10.1007/978-3-030-22397-7\\_9}}",
      "links": [
        { "name" : "technical report",
          "link" : "https://arxiv.org/abs/1903.07962",
          "icon" : "arxiv" },
        { "name" : "slides",
					"link" : "https://www.slideshare.net/MarcoPeressotti/no-more-no-less-a-formal-model-for-serverless-computing",
					"icon" : "slideshare"}
      ],
      "tags": [ "Serverless", "Microservices" ],
      "authors": [ "Saverio Giallorenzo", "Fabrizio Montesi", "Marco Peressotti" ],
      "abstract": "Serverless computing, also known as Functions-as-a-Service, is a recent paradigm aimed at simplifying the programming of cloud applications. The idea is that developers design applications in terms of functions, which are then deployed on a cloud infrastructure. The infrastructure takes care of executing the functions whenever requested by remote clients, dealing automatically with distribution and scaling with respect to inbound traffic. While vendors already support a variety of programming languages for serverless computing (e.g. Go, Java, Javascript, Python), as far as we know there is no reference model yet to formally reason on this paradigm. In this paper, we propose the first core formal programming model for serverless computing, which combines ideas from both the λ-calculus (for functions) and the π-calculus (for communication). To illustrate our proposal, we model a real-world serverless system. Thanks to our model, we capture limitations of current vendors and formalise possible amendments.",
      "non_group" : false,
      "type": "conference",
      "grants" : [ "DFF-7014-00041" ]
    },{
      "bibitem": "@article{BP19a,  author = {Brengos, Tomasz and Peressotti, Marco},  title = {Behavioural equivalences for timed systems},  journal = {Logical Methods in Computer Science},  volume = {15},  number = {1}, pages = {17:1--14:41}, year = {2019},  url = {https://doi.org/10.23638/LMCS-15(1:17)2019}, doi = {10.23638/LMCS-15(1:17)2019} }",
      "links": [
        { "link" : "https://lmcs.episciences.org/5220/pdf" },
        { "name" : "technical report",
          "link" : "https://arxiv.org/abs/1711.10233",
          "icon" : "arxiv" }
      ],
      "tags": [ "Behavioural Theory", "Quantitative Semantics", "Coalgebras" ],
      "authors": [ "Marco Peressotti" ],
      "abstract": "Timed transition systems are behavioural models that include an explicit treatment of time flow and are used to formalise the semantics of several foundational process calculi and automata. Despite their relevance, a general mathematical characterisation of timed transition systems and their behavioural theory is still missing. We introduce the first uniform framework for timed behavioural models that encompasses known behavioural equivalences such as timed bisimulations, timed language equivalences as well as their weak and time-abstract counterparts. All these notions of equivalences are naturally organised by their discriminating power in a spectrum. We prove that this result does not depend on the type of the systems under scrutiny: it holds for any generalisation of timed transition system. We instantiate our framework to timed transition systems and their quantitative extensions such as timed probabilistic systems. ",
      "non_group" : false,
      "type": "journal",
      "grants" : [ "DFF-7014-00041" ]
    },
    {
      "bibitem": "@article{KMP19a,  author = {Kokke, Wen and Montesi, Fabrizio and Peressotti, Marco},  title = {Better Late Than Never: A Fully-abstract Semantics for Classical Processes},  journal = {Proc. ACM Program. Lang.},  issue_date = {January 2019},  volume = {3},  number = {POPL},  month = jan,  year = {2019},  issn = {2475-1421},  pages = {24:1--24:29},  articleno = {24},  numpages = {29},  url = {http://doi.acm.org/10.1145/3290337},  doi = {10.1145/3290337},  acmid = {3290337},  publisher = {ACM},  address = {New York, NY, USA},  keywords = {Behavioural Theory, Curry-Howard correspondence, Deadlock-freedom}}",
      "links": [
				{ "link" : "https://dl.acm.org/citation.cfm?doid=3302515.3290337" },
				{ "name" : "technical report",
					"link" : "https://arxiv.org/abs/1811.02209",
					"icon" : "arxiv"},
        { "name" : "slides",
					"link" : "https://www.slideshare.net/MarcoPeressotti/better-late-than-never-a-fully-abstract-semantics-for-classical-processes",
					"icon" : "slideshare"},
        { "name" : "presentation",
          "link" : "https://youtu.be/pLbq7CaWByw",
          "icon" : "video" }
			],
      "tags": [ "Behavioural Theory", "Logic", "Process Calculi", "Session Types" ],
      "authors": [ "Fabrizio Montesi", "Marco Peressotti" ],
      "abstract": "We present Hypersequent Classical Processes (HCP), a revised interpretation of the “Proofs as Processes” correspondence between linear logic and the π-calculus initially proposed by Abramsky [1994], and later developed by Bellin and Scott [1994], Caires and Pfenning [2010], and Wadler [2014], among others. HCP mends the discrepancies between linear logic and the syntax and observable semantics of parallel composition in the π-calculus, by conservatively extending linear logic to hyperenvironments (collections of environments, inspired by the hypersequents by Avron [1991]). Separation of environments in hyperenvironments is internalised by ⊗ and corresponds to parallel process behaviour. Thanks to this property, for the first time we are able to extract a labelled transition system (lts) semantics from proof rewritings. Leveraging the information on parallelism at the level of types, we obtain a logical reconstruction of the delayed actions that Merro and Sangiorgi [2004] formulated to model non-blocking I/O in the π-calculus. We define a denotational semantics for processes based on Brzozowski derivatives, and uncover that non-interference in HCP corresponds to Fubini’s theorem of double antiderivation. Having an lts allows us to validate HCP using the standard toolbox of behavioural theory. We instantiate bisimilarity and barbed congruence for HCP, and obtain a full abstraction result: bisimilarity, denotational equivalence, and barbed congruence coincide.",
      "non_group" : false,
      "type": "Journal",
      "grants" : [ "DFF-7014-00041" ]
    },
    {
      "bibitem": "@inproceedings{BGMTZ19,  author = {Mario Bravetti and  Saverio Giallorenzo and  Jacopo Mauro and  Iacopo Talevi and  Gianluigi Zavattaro},  title = {Optimal and Automated Deployment for Microservices},  booktitle = {Fundamental Approaches to Software Engineering - 22nd International  Conference, {FASE} 2019, Held as Part of the European Joint Conferences  on Theory and Practice of Software, {ETAPS} 2019, Prague, Czech Republic,  April 6-11, 2019, Proceedings},  pages = {351--368},  year = {2019},  url = {https://doi.org/10.1007/978-3-030-16722-6\\_21},  doi = {10.1007/978-3-030-16722-6\\_21},  publisher = {Springer} }",
      "links": [
        { "link" : "https://saveriogiallorenzo.com/publications/fase2019/" },
        { "name" : "technical report",
          "link" : "https://arxiv.org/abs/1901.09782",
          "icon" : "arxiv"}
      ],
      "tags": [ "Microservices", "Deployment", "Optimisation" ],
      "authors": [ "Saverio Giallorenzo", "Jacopo Mauro" ],
      "abstract": "Microservices are highly modular and scalable Service Oriented Architectures. They underpin automated deployment practices like Continuous Deployment and Autoscaling. In this paper we formalize these practices and show that automated deployment - proven undecidable in the general case - is algorithmically treatable for microservices. Our key assumption is that the configuration life-cycle of a microservice is split into two phases: (i) creation, which entails establishing initial connections with already available microservices, and (ii) subsequent binding/unbinding with other microservices. To illustrate the applicability of our approach, we implement an automatic optimal deployment tool and compute deployment plans for a realistic microservice architecture, modeled in the Abstract Behavioral Specification (ABS) language.",
      "non_group" : false,
      "type": "Conference"
    },
    {
      "bibitem": "@inproceedings{LCCCGG19,  author = {Tong Liu and  Franco Callegati and  Walter Cerroni and  Chiara Contoli and  Maurizio Gabbrielli and  Saverio Giallorenzo},  title = {Constraint Programming for Flexible Service Function Chaining Deployment},  booktitle = {52nd Hawaii International Conference on System Sciences, {HICSS} 2019,  Grand Wailea, Maui, Hawaii, USA, January 8-11, 2019},  pages = {1--10},  year = {2019},  url = {http://hdl.handle.net/10125/59640},  timestamp = {Sun, 07 Apr 2019 15:32:03 +0200},  biburl = {https://dblp.org/rec/bib/conf/hicss/LiuCCCGG19},  bibsource = {dblp computer science bibliography, https://dblp.org}, publisher = {ScholarSpace / {AIS} Electronic Library (AISeL)} }",
      "links": [
        { "link" : "https://saveriogiallorenzo.com/publications/hicss2019_cp/" },
        { "name" : "technical report",
          "link" : "https://arxiv.org/abs/1812.05534",
          "icon" : "arxiv"}
      ],
      "tags": [ "Software-defined Networks", "Deployment", "Optimisation" ],
      "authors": [ "Saverio Giallorenzo" ],
      "abstract": "Network Function Virtualization (NFV) and Software Defined Networking (SDN) are technologies that recently acquired a great momentum thanks to their promise of being a flexible and cost-effective solution for replacing hardware-based, vendor-dependent network middleboxes with software appliances running on general purpose hardware in the cloud. Delivering end-to-end networking services across multiple NFV/SDN network domains by implementing the so-called Service Function Chain (SFC) i.e., a sequence of Virtual Network Functions (VNF) that composes the service, is a challenging task. In this paper we address two crucial sub-problems of this task: i) the language to formalize the request of a given SFC to the network and ii) the solution of the SFC design problem, once the request is received. As for i) in our solution the request is built upon the intent-based approach, with a syntax that focuses on asking the user \"what\" she needs and not \"how\" it should be implemented, in a simple and high level language. Concerning ii) we define a formal model describing network architectures and VNF properties that is then used to solve the SFC design problem by means of Constraint Programming (CP), a programming paradigm which is often used in Artificial Intelligence applications. We argue that CP can be effectively used to address this kind of problems because it provides very expressive and flexible modeling languages which come with powerful solvers, thus providing efficient and scalable performance. We substantiate this claim by validating our tool on some typical and non trivial SFC design problems.",
      "non_group" : true,
      "type": "Conference"
    },{
      "bibitem": "@inproceedings{CGGMP19,  author = {Franco Callegati and  Saverio Giallorenzo and  Maurizio Gabbrielli and  Andrea Melis and  Marco Prandini},  title = {Federated Platooning: Insider Threats and Mitigations},  booktitle = {52nd Hawaii International Conference on System Sciences, {HICSS} 2019,  Grand Wailea, Maui, Hawaii, USA, January 8-11, 2019},  pages = {1--10},  year = {2019},  url = {http://hdl.handle.net/10125/59758},  timestamp = {Sun, 07 Apr 2019 15:32:03 +0200},  biburl = {https://dblp.org/rec/bib/conf/hicss/CallegatiGGMP19},  bibsource = {dblp computer science bibliography, https://dblp.org}, publisher = {ScholarSpace / {AIS} Electronic Library (AISeL)} }",
      "links": [
        { "link" : "https://saveriogiallorenzo.com/publications/hicss2019_sec/" }
      ],
      "tags": [ "Smart Cities", "Security" ],
      "authors": [ "Saverio Giallorenzo" ],
      "abstract": "Platoon formation is a freight organization system where a group of vehicles follows a predefined trajectory maintaining a desired spatial pattern. Benefits of platooning include fuel savings, reduction of carbon dioxide emissions, and efficient allocation of road capacity. While traditionally platooning has been an exclusive option limited to specific geographical areas managed by a single operator, recent technological developments and EU initiatives are directed at the creation of an international, federated market for platooning, i.e., a consortium of platoon operators that collaborate and coordinate their users to constitute freights covering international routes. In this paper, we look at federated platooning from an insiders’ perspective. In our development, first we outline the basic elements of platooning and federation of platooning operators. Then, we provide a comprehensive analysis to identify the possible insiders (employees, users, operators, and federated members) and the threats they pose. Finally, we propose two layered, composable technical solutions to mitigate those threats: a) a decentralized overlay network that regulates the interactions among the stakeholders, useful to mitigate issues linked to data safety and trustworthiness and b) a dynamic federation platform, needed to monitor and interrupt deviant behaviors of federated members.",
      "non_group" : true,
      "type": "Conference"
    },{
    "bibitem": "@article{CCEMS, author = {Codish, Michael and Cruz-Filipe, Luís and Ehlers, Thorsten and Müller, Mike and Schneider-Kamp, Peter}, title = {Sorting networks: to the end and back again}, journal = {Journal of Computer and System Sciences}, volume={104},pages={184--201},year={2019}}",
    "links": [
      { "link" : "https://doi.org/10.1016/j.jcss.2016.04.004" }
    ],
    "tags": [ "Sorting Networks" ],
    "authors": [ "Luís Cruz-Filipe" ],
    "abstract": "New properties of the front and back ends of sorting networks are studied, illustrating their utility when searching for bounds on optimal networks.  Search focuses first on the &ldquo;out-sides&rdquo; of the network and then on the inner part.  Previous works focused on properties of the front end to break symmetries in the search.  The new, out-side-in, properties shed understanding on how sorting networks sort, and facilitate the computation of new bounds on optimality.  We present new, faster, parallel sorting networks for 17&ndash;20 inputs.  For 17 inputs, we show that no sorting network using less layers exists.",
    "non_group" : true,
    "type": "journal"
    },{
    "bibitem": "@article{CMS19,author={Luís Cruz{-}Filipe and João Marques{-}Silva and Peter Schneider{-}Kamp},title={Formally Verifying the Solution to the Boolean Pythagorean Triples Problem},ournal={J. Automated Reasoning},volume={63},number={3},pages={695--722},year={2019}}",
    "links": [
      { "link" : "https://doi.org/10.1016/j.jcss.2016.04.004" }
    ],
    "tags": [ "Knowledge Representation","Formal Proofs" ],
    "authors": [ "Luís Cruz-Filipe" ],
    "abstract": "The Boolean Pythagorean Triples problem asks: does there exist a binary coloring of the natural numbers such that every Pythagorean triple contains an element of each color? This problem was first solved in 2016, when Heule, Kullmann and Marek encoded a finite restriction of this problem as a propositional formula and showed its unsatisfiability. In this work we formalize their development in the theorem prover Coq. We state the Boolean Pythagorean Triples problem in Coq, define its encoding as a propositional formula and establish the relation between solutions to the problem and satisfying assignments to the formula. We verify Heule et al.'s proof by showing that the symmetry breaks they introduced to simplify the propositional formula are sound, and by implementing a correct-by-construction checker for proofs of unsatisfiability based on reverse unit propagation.",
    "non_group" : false,
    "type": "journal"
    }
]
}
